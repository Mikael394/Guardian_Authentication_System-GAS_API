# Generated by Django 5.0.2 on 2024-05-01 12:21

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('is_parent', models.BooleanField(default=False)),
                ('is_hrt', models.BooleanField(default=False)),
                ('is_authenticator', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('date_of_birth', models.DateField(default=datetime.date.today)),
                ('address', models.CharField(max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GradeAndSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('grade', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('user_photo_1', models.ImageField(upload_to='guardian_faces')),
                ('user_photo_2', models.ImageField(null=True, upload_to='guardian_faces')),
                ('user_photo_3', models.ImageField(null=True, upload_to='guardian_faces')),
                ('phone_number', models.CharField(max_length=15, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('address', models.CharField(max_length=30, null=True)),
                ('relationship', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='videos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Authenticator',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomeRoomTeacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('user_photo_1', models.ImageField(upload_to='guardian_faces')),
                ('user_photo_2', models.ImageField(null=True, upload_to='guardian_faces')),
                ('user_photo_3', models.ImageField(null=True, upload_to='guardian_faces')),
                ('relation', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('image', models.ImageField(null=True, upload_to='students/')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.gradeandsection')),
                ('guardians', models.ManyToManyField(blank=True, related_name='students', to='accounts.guardian')),
                ('parents', models.ManyToManyField(blank=True, related_name='students', to='accounts.parent')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now=True, unique=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.gradeandsection')),
                ('students', models.ManyToManyField(related_name='students', to='accounts.student')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(default='Picked Up', max_length=50)),
                ('guardian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.guardian')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
                ('authenticator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.authenticator')),
            ],
        ),
        migrations.AddField(
            model_name='gradeandsection',
            name='home_room_teacher',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section', to='accounts.homeroomteacher'),
        ),
        migrations.CreateModel(
            name='ContactBook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('parents_follow_up', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Fair', 'Fair'), ('Need Improvement', 'Need Improvement')], max_length=20)),
                ('hand_writing', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Fair', 'Fair'), ('Need Improvement', 'Need Improvement')], max_length=20)),
                ('reading_skill', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Fair', 'Fair'), ('Need Improvement', 'Need Improvement')], max_length=20)),
                ('material_handling', models.CharField(choices=[('Very Good', 'Very Good'), ('Good', 'Good'), ('Fair', 'Fair'), ('Need Improvement', 'Need Improvement')], max_length=20)),
                ('happy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('wear_uniform', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('has_good_time_while_eating', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('active_participation', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('teacher_comment', models.TextField()),
                ('parent_comment', models.TextField()),
                ('is_read_p', models.BooleanField(default=False)),
                ('is_read_t', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
                ('home_room_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.homeroomteacher')),
            ],
        ),
    ]
